(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{334:function(a,t,r){"use strict";r.r(t);var s=r(14),v=Object(s.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"特征"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#特征"}},[a._v("#")]),a._v(" 特征")]),a._v(" "),t("h4",{attrs:{id:"有穷性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#有穷性"}},[a._v("#")]),a._v(" 有穷性")]),a._v(" "),t("p",[a._v("算法的有穷性是指算法必须能在执行有限个步骤之后终止；")]),a._v(" "),t("h4",{attrs:{id:"确切性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#确切性"}},[a._v("#")]),a._v(" 确切性")]),a._v(" "),t("p",[a._v("算法的每一步骤必须有确切的定义；")]),a._v(" "),t("h4",{attrs:{id:"输入项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#输入项"}},[a._v("#")]),a._v(" 输入项")]),a._v(" "),t("p",[a._v("一个算法有0个或多个输入，以刻画运算对象的初始情况，所谓0个输入是指算法本身定出了初始条件；")]),a._v(" "),t("h4",{attrs:{id:"输出项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#输出项"}},[a._v("#")]),a._v(" 输出项")]),a._v(" "),t("p",[a._v("一个算法有一个或多个输出，以反映对输入数据加工后的结果。没有输出的算法是毫无意义的；")]),a._v(" "),t("h4",{attrs:{id:"可行性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#可行性"}},[a._v("#")]),a._v(" 可行性")]),a._v(" "),t("p",[a._v("算法中执行的任何计算步骤都是可以被分解为基本的可执行的操作步骤，即每个计算步骤都可以在有限时间内完成")]),a._v(" "),t("h2",{attrs:{id:"算法评定"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#算法评定"}},[a._v("#")]),a._v(" 算法评定")]),a._v(" "),t("p",[a._v("同一个问题可以用不同的算法来解决，而一个算法的优劣影响到程序执行的效率，评价一个算法主要从"),t("strong",[a._v("时间复杂度")]),a._v("和"),t("strong",[a._v("空间复杂度")]),a._v("来考虑")]),a._v(" "),t("ul",[t("li",[a._v("复杂度指程序执行时需要的计算量(时间)和内存空间（和代码是否清晰简洁无关）")]),a._v(" "),t("li",[a._v("复杂度是"),t("strong",[a._v("数量级")]),a._v("，不是具体的数字。比如以前老是说的万元户、百万富翁、亿万富翁，这就是数量级")])]),a._v(" "),t("h4",{attrs:{id:"时间复杂度"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#时间复杂度"}},[a._v("#")]),a._v(" 时间复杂度")]),a._v(" "),t("p",[a._v("算法的时间复杂度是指执行算法所需的的计算工作量")]),a._v(" "),t("h4",{attrs:{id:"空间复杂度"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#空间复杂度"}},[a._v("#")]),a._v(" 空间复杂度")]),a._v(" "),t("p",[a._v("算法的空间复杂度是指执行算法所需要的内存空间。")]),a._v(" "),t("h4",{attrs:{id:"正确性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#正确性"}},[a._v("#")]),a._v(" 正确性")]),a._v(" "),t("p",[a._v("正确性是评价一个算法最重要的标准")]),a._v(" "),t("h4",{attrs:{id:"可读性-清晰性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#可读性-清晰性"}},[a._v("#")]),a._v(" 可读性（清晰性）")]),a._v(" "),t("p",[a._v("指算法可供人阅读的容易程度(某些时间复杂度相差不大的情况，可优先考虑可读性)")]),a._v(" "),t("h4",{attrs:{id:"鲁棒性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#鲁棒性"}},[a._v("#")]),a._v(" 鲁棒性")]),a._v(" "),t("p",[a._v("对不合理的数据输入的处理能力，个人觉得叫"),t("strong",[a._v("容错性")]),a._v("更适合")]),a._v(" "),t("h2",{attrs:{id:"算法方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#算法方法"}},[a._v("#")]),a._v(" 算法方法")]),a._v(" "),t("h4",{attrs:{id:"递推法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#递推法"}},[a._v("#")]),a._v(" 递推法")]),a._v(" "),t("h4",{attrs:{id:"递归法※"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#递归法※"}},[a._v("#")]),a._v(" 递归法※")]),a._v(" "),t("h4",{attrs:{id:"穷举法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#穷举法"}},[a._v("#")]),a._v(" 穷举法")]),a._v(" "),t("p",[t("a",{attrs:{href:"%E7%A9%B7%E4%B8%BE%E6%B3%95/%E9%B8%A1%E5%85%94%E5%90%8C%E7%AC%BC%E9%97%AE%E9%A2%98"}},[a._v("鸡兔同笼问题")])]),a._v(" "),t("p",[t("a",{attrs:{href:"%E7%A9%B7%E4%B8%BE%E6%B3%95/%E7%99%BE%E5%85%83%E4%B9%B0%E9%B8%A1%E9%97%AE%E9%A2%98"}},[a._v("百元买鸡问题")])]),a._v(" "),t("h4",{attrs:{id:"贪心算法※"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#贪心算法※"}},[a._v("#")]),a._v(" 贪心算法※")]),a._v(" "),t("h4",{attrs:{id:"分治法※"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分治法※"}},[a._v("#")]),a._v(" 分治法※")]),a._v(" "),t("h4",{attrs:{id:"动态规划法※"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#动态规划法※"}},[a._v("#")]),a._v(" 动态规划法※")]),a._v(" "),t("h4",{attrs:{id:"迭代法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#迭代法"}},[a._v("#")]),a._v(" 迭代法")]),a._v(" "),t("h4",{attrs:{id:"分支界限法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分支界限法"}},[a._v("#")]),a._v(" 分支界限法")]),a._v(" "),t("h4",{attrs:{id:"回溯法※"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#回溯法※"}},[a._v("#")]),a._v(" 回溯法※")])])}),[],!1,null,null,null);t.default=v.exports}}]);