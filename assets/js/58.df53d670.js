(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{349:function(v,_,t){"use strict";t.r(_);var a=t(14),s=Object(a.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("blockquote",[_("p",[v._v("递归算法，在计算机科学中是指通过重复将问题拆解为同类的子问题从而解决问题的方法")])]),v._v(" "),_("h4",{attrs:{id:"注意"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#注意"}},[v._v("#")]),v._v(" 注意")]),v._v(" "),_("ol",[_("li",[v._v("递归就是在函数中调用自身")]),v._v(" "),_("li",[v._v("在使用递归的时候，必须有一个明确的终止条件，称为递归出口")])]),v._v(" "),_("h4",{attrs:{id:"能够解决的问题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#能够解决的问题"}},[v._v("#")]),v._v(" 能够解决的问题")]),v._v(" "),_("p",[v._v("几个经典的使用递归求解的问题")]),v._v(" "),_("ol",[_("li",[v._v("阶乘")]),v._v(" "),_("li",[v._v("斐波那契数列")]),v._v(" "),_("li",[v._v("汉诺塔")]),v._v(" "),_("li",[v._v("杨辉三角的存取")]),v._v(" "),_("li",[v._v("字符串回文判断")]),v._v(" "),_("li",[v._v("字符串全排列")]),v._v(" "),_("li",[v._v("二分查找")]),v._v(" "),_("li",[v._v("树的深度")])]),v._v(" "),_("h4",{attrs:{id:"什么是尾递归"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#什么是尾递归"}},[v._v("#")]),v._v(" 什么是尾递归")]),v._v(" "),_("p",[v._v("如果一个函数中所有的递归形式的调用都是出现在末尾，我们称这个递归函数是尾递归。")]),v._v(" "),_("p",[v._v("当递归调用是整个函数最后执行的语句且不属于表达式的一部分时，这个递归就是尾递归。")]),v._v(" "),_("p",[v._v("尾递归的特点就是在回归过程中不做任何操作")])])}),[],!1,null,null,null);_.default=s.exports}}]);