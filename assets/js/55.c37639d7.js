(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{344:function(t,e,r){"use strict";r.r(e);var a=r(14),_=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("blockquote",[e("p",[t._v("贪心算法（又称贪婪算法）是指，在对问题求解时，总是做出在当前看来是最好的选择。也就是说，不从整体最优上加以考虑，算法得到的是在某种意义上的局部最优解")])]),t._v(" "),e("h2",{attrs:{id:"算法思路"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#算法思路"}},[t._v("#")]),t._v(" 算法思路")]),t._v(" "),e("p",[t._v("贪心算法一般按如下步骤进行：")]),t._v(" "),e("ol",[e("li",[t._v("建立数学模型来描述问题")]),t._v(" "),e("li",[t._v("将求解的问题分成若干个子问题")]),t._v(" "),e("li",[t._v("对每个子问题求解，得到子问题的局部最优解")]),t._v(" "),e("li",[t._v("把子问题的解局部最优解合成原来解问题的一个解")])]),t._v(" "),e("h2",{attrs:{id:"存在问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#存在问题"}},[t._v("#")]),t._v(" 存在问题")]),t._v(" "),e("p",[t._v("贪心算法也存在如下问题：")]),t._v(" "),e("ol",[e("li",[t._v("不能保证解是最佳的。因为贪心算法总是从局部出发，并没从整体考虑")]),t._v(" "),e("li",[t._v("贪心算法一般用来解决求最大或最小解")]),t._v(" "),e("li",[t._v("贪心算法只能确定某些问题的可行性范围")])]),t._v(" "),e("h2",{attrs:{id:"经典问题来源https-leetcode-cn-com"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#经典问题来源https-leetcode-cn-com"}},[t._v("#")]),t._v(" 经典问题来源"),e("a",{attrs:{href:"https://link.segmentfault.com/?enc=qHMXE0BufxLO4G0Cg4QZtg%3D%3D.fDRpy0sh6vDuFGehDw2cuBbyqjOnGK%2FzmKgDGmtar0Q%3D",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://leetcode-cn.com"),e("OutboundLink")],1)]),t._v(" "),e("ul",[e("li",[t._v("455-分发饼干")]),t._v(" "),e("li",[t._v("55-跳跃游戏")]),t._v(" "),e("li",[t._v("435-无重叠区间")]),t._v(" "),e("li",[t._v("376-摇摆序列")])]),t._v(" "),e("p",[e("a",{attrs:{href:"https://baike.baidu.com/item/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/5411800",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://baike.baidu.com/item/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/5411800"),e("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=_.exports}}]);